{"version":3,"sources":["Pokedex.js","arrow-pic.png","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","useState","name","setName","type","setType","pic","setPic","baseEx","setBaseEx","stats","setStats","color","setColor","id","setId","useEffect","axios","get","link","then","res","x","data","toLocaleUpperCase","types","map","sprites","stat","toUpperCase","catch","err","console","error","Display","background","dropInfo","useRef","dropdown","show","setShow","style","backgroundColor","className","src","alt","onClick","ref","Pokedex","links","urls","App","siteArr","setSiteArr","page","setPage","nameArr","setNameArr","prevBtn","nextBtn","response","previous","current","visibility","next","results","url","window","scrollTo","names","arrow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d40e1ba3.chunk.js","sourcesContent":["import App from \"./App\"\nimport axios from 'axios';\nimport React, { useState , useEffect, useRef} from 'react';\nimport './App.css';\nimport './pokemon.css'\nfunction getColor(x){\n  return (x === \"normal\") ? '#A8A77A'\n  :(x === \"fire\") ? '#EE8130'\n  :(x === \"water\") ? '#6390F0' \n  :(x === \"electric\") ? '#F7D02C'\n  :(x=== \"grass\") ? '#7AC74C'\n  :(x === \"ice\") ? '#96D9D6'\n  :(x === \"fighting\") ? '#C22E28'\n  :(x === \"poison\") ? '#A33EA1'\n  :(x === \"ground\") ? '#E2BF65'\n  :(x === \"flying\") ? '#A98FF3'\n  :(x === \"psychic\") ? '#F95587'\n  :(x === \"bug\") ? '#A6B91A'\n  :(x === \"rock\") ? '#B6A136'\n  :(x === \"ghost\") ? '#735797'\n  :(x === \"dragon\") ? '#6F35FC'\n  :(x === \"dark\") ? '#705746'\n  :(x === \"steel\") ? '#B7B7CE'\n  :(x === \"fairy\") ? '#D685AD'\n  :\"white\"\n}\nfunction Pokedex(props){\n const links = props.urls.map(x => <Pokemon link={x} key={x} />)\n  return(\n    <div id=\"list-wrapper\"> \n      <div id=\"poke-list\">\n      {links}\n      </div>\n    </div>\n  )\n}\nfunction Pokemon(props){\n const [name, setName] = useState('')\n const [type, setType] = useState('')\n const [pic, setPic] = useState('')\n const [baseEx, setBaseEx] = useState('')\n const [stats, setStats] = useState('')\n const [color, setColor] =useState('')\n const [id, setId] = useState('')\n  useEffect(()=> { \n  axios.get(props.link) \n        .then(res =>{\n         setName(res.data.name.toLocaleUpperCase())\n         setType(res.data.types.map(x => x.type.name.toLocaleUpperCase() +\" \" )) // check this out\n          //setMoves(res.data.moves.map(x => x.move.name).sort().map(x => <li>{x}</li>)    )\n         setPic(res.data.sprites['front_default'])\n         setBaseEx(res.data['base_experience'])\n         setColor(getColor(res.data.types[0].type.name) )\n         setId(res.data.id)\n         setStats(res.data.stats.map(x => {\n         return <li > <span>{x.stat.name.toUpperCase() }</span> \n                     <span>{x[\"base_stat\"]}  </span>\n                </li> \n         }))\n        })\n        .catch((err) => {console.error(err)})  \n  }, [props.link]) \n  return(\n    <div  >\n      <Display   name={name} type={type} baseEx={baseEx} stats={stats} pic={pic}\n                   color={color} id={id}\n      />\n    </div>\n  )\n}\nfunction Display(props){ \n  //const style = [ \"colours\", \".\", props.type[0] ].join(\"\")\n  const background = props.color\n  const dropInfo = useRef()\n  const dropdown = useRef()\n  const [show, setShow] = useState('drop-info')\n  function toggle(){\n    return (show === 'drop-info') ? setShow('show')\n    : setShow('drop-info')  \n  }\n  return(\n    <div style={{backgroundColor: background }} className=\"poke-box\" key={props.name} >\n      <div >\n        <p className='poke-id'> No. {props.id}</p> \n        <div className=\"poke-pic\">\n          <img src={props.pic} className=\"pic\"  alt={props.name} />\n        </div>\n        <p className='poke-name'>{props.name}</p>\n        <p className='poke-type'>  {props.type}</p>\n        <button className=\"drop-button\" onClick={toggle} >Stats</button>\n      </div>     \n      <div className=\"dropdown\"  ref={dropdown}>\n        <div ref={dropInfo} className={show}   >\n          <ul>\n            <li > EXP <span>{props.baseEx} </span></li>\n            {props.stats}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport  default Pokedex;","export default __webpack_public_path__ + \"static/media/arrow-pic.b8a1f3ca.png\";","\nimport React, { useState , useEffect, useRef } from 'react';\nimport Pokedex  from './Pokedex';\nimport axios from 'axios';\nimport arrow from './arrow-pic.png'\nfunction App() {\n  const [siteArr, setSiteArr] = useState([])\n  const [page, setPage] = useState(\"https://pokeapi.co/api/v2/pokemon/?limit=20\")\n  const [nameArr, setNameArr] = useState([])\n  const prevBtn = useRef()\n  const nextBtn = useRef()\n  function nextPage(){\n    axios.get(page).then(res =>{\n      setPage(res.data.next) \n    }) \n    window.scrollTo(0,0)\n  }\n  function previousPage(){\n    axios.get(page).then(res =>{\n      setPage(res.data.previous) \n    }) \n    window.scrollTo(0,0)\n  }  \n  function scrollTop(){\n    window.scrollTo(0,0)\n  }\n  useEffect(()=> { \n    axios.get(page).then(response=> {\n          (response.data.previous === null)? prevBtn.current.style.visibility='hidden' \n          : prevBtn.current.style.visibility='visible' ;\n          (response.data.next === null)? nextBtn.current.style.visibility='hidden' \n          :nextBtn.current.style.visibility='visible' \n    })\n  }, [page ])\n  useEffect(()=> { \n      axios.get(page) \n            .then(response => {\n              setNameArr(response.data.results.map(x =>  x.name) )\n              setSiteArr(response.data.results.map(x =>  x.url) )             \n             })\n      .catch((err) => {console.error(err) })     \n  }, [page ])   \n  return (\n    <div className=\"App\">\n      <div className='header'>\n        <div >  <button  className='pg-btn' id='prev-btn' ref={prevBtn} onClick={previousPage} > prev </button></div>\n        <h1>Pokedex</h1>\n        <div > <button className='pg-btn' id='next-btn' ref={nextBtn} onClick={nextPage} > next </button> </div>\n      </div>\n        <Pokedex names={nameArr} urls={siteArr} /> \n        <button onClick={scrollTop} id='top-btn' > \n            <img id='arrow-pic' src={arrow} alt='up-arrow'/>\n        </button>\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}