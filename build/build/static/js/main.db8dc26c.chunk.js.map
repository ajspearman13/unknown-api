{"version":3,"sources":["Context.js","Pokedex.js","arrow-pic.png","App.js","reportWebVitals.js","index.js"],"names":["Battle","createContext","Pokemon","props","useState","name","setName","type","setType","pic","setPic","baseEx","setBaseEx","stats","setStats","color","setColor","id","setId","battleStats","setBattleStats","useEffect","axios","get","link","then","res","x","data","toLocaleUpperCase","types","map","sprites","stat","toUpperCase","catch","err","console","error","Display","background","dropInfo","useRef","dropdown","btnBox","show","setShow","checkbox","btnText","setBtnText","btnColor","setBtnColor","useContext","value","setValue","remove","includes","style","backgroundColor","className","ref","onClick","length","alert","filter","disabled","src","alt","Math","random","Pokedex","links","urls","App","siteArr","setSiteArr","page","setPage","nameArr","setNameArr","pageNum","setPageNum","prevBtn","nextBtn","lastBtn","firstBtn","bottom","bottomPoke","logo","response","previous","current","visibility","next","results","url","window","scrollTo","arrow","Provider","names","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db8dc26c.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const Battle = createContext(null)","import axios from 'axios';\nimport React, { useState , useEffect, useRef, useContext} from 'react';\nimport './App.css';\nimport './pokedex.css';\nimport { Battle } from \"./Context\";\n\nfunction getColor(x){\n  return (x === \"normal\") ? '#A8A77A'\n  :(x === \"fire\") ? '#EE8130'\n  :(x === \"water\") ? '#6390F0' \n  :(x === \"electric\") ? '#F7D02C'\n  :(x=== \"grass\") ? '#7AC74C'\n  :(x === \"ice\") ? '#96D9D6'\n  :(x === \"fighting\") ? '#C22E28'\n  :(x === \"poison\") ? '#A33EA1'\n  :(x === \"ground\") ? '#E2BF65'\n  :(x === \"flying\") ? '#A98FF3'\n  :(x === \"psychic\") ? '#F95587'\n  :(x === \"bug\") ? '#A6B91A'\n  :(x === \"rock\") ? '#B6A136'\n  :(x === \"ghost\") ? '#735797'\n  :(x === \"dragon\") ? '#6F35FC'\n  :(x === \"dark\") ? '#705746'\n  :(x === \"steel\") ? '#B7B7CE'\n  :(x === \"fairy\") ? '#D685AD'\n  :\"white\"\n}\nfunction Pokedex(props){\n const links = props.urls.map(x => <Pokemon link={x} key={x}  />)\n \n  return(\n    <div id=\"list-wrapper\"> \n      <div id=\"poke-list\">\n      {links}\n      </div>\n    </div>\n  )\n}\nfunction Pokemon(props){\n const [name, setName] = useState('')\n const [type, setType] = useState('')\n const [pic, setPic] = useState('')\n const [baseEx, setBaseEx] = useState('')\n const [stats, setStats] = useState('')\n const [color, setColor] =useState('')\n const [id, setId] = useState('')\n const [battleStats, setBattleStats] = useState('')\n\n  useEffect(()=> { \n  axios.get(props.link) \n        .then(res =>{\n         setName(res.data.name.toLocaleUpperCase())\n         setType(res.data.types.map(x => x.type.name.toLocaleUpperCase() +\" \" )) // check this out\n          //setMoves(res.data.moves.map(x => x.move.name).sort().map(x => <li>{x}</li>)    )\n         setPic(res.data.sprites['front_default'])\n         setBaseEx(res.data['base_experience'])\n         setColor(getColor(res.data.types[0].type.name) )\n         setId(res.data.id)\n         setBattleStats(res.data.stats)\n         setStats(res.data.stats.map(x => {\n         return <li > <span>{x.stat.name.toUpperCase() }</span> \n                     <span>{x[\"base_stat\"]}  </span>\n                </li> \n         }))\n        })\n        .catch((err) => {console.error(err)})  \n  }, [props.link]) \n  return(\n    <div  >\n      <Display   name={name} type={type} baseEx={baseEx} stats={stats} pic={pic} \n                   color={color} id={id}  \n                   data={[name, type, baseEx, stats, pic, color, id, battleStats,  props.link]}\n      />\n    </div>\n  )\n}\nfunction Display(props){ \n  //const style = [ \"colours\", \".\", props.type[0] ].join(\"\")\n  const background = props.color\n  const dropInfo = useRef()\n  const dropdown = useRef()\n  const btnBox = useRef()\n  const [show, setShow] = useState('drop-info')\n  const checkbox = useRef()\n  const [btnText, setBtnText] = useState('select')\n  const [btnColor, setBtnColor] = useState('white')\n  const {value, setValue} = useContext(Battle)\n  function toggle(){\n    return (show === 'drop-info') ? setShow('show')\n    : setShow('drop-info')  \n  }\n  function captured(){\n    if (btnText === 'select'){\n      if   (value.length === 6){  alert('SORRY!!! YOU CAN ONLY SELECT 6 POKEMON')}\n      else {setBtnText('drop')\n           setValue([...value, props.data])\n           setBtnColor(props.color)               ////// change  \n          }    \n     } \n     else{ setBtnText('select') \n     setBtnColor('white')\n         setValue  ( value.filter(x => x[0] !== props.data[0]))\n     }\n  }\n  function remove(x){\n      if  (value.map(x=>x[0]).includes(props.data[0]))  { return ( setBtnText('drop'), setBtnColor(props.color)) }  \n  }\n useEffect(() => {\n  remove()\n //console.log('')\n }, [remove])\n  return(\n    <div style={{backgroundColor: background }} className=\"poke-box\" key={props.name} >\n      <div >\n        <p className='poke-id'> No. {props.id} </p> \n        <div ref={btnBox} className='btn-box'>\n        <button onClick={captured}  ref={checkbox} className='select-btn' style={{backgroundColor: btnColor}} disabled={false} >{btnText}</button>\n        <br/>\n        </div>\n        <div className=\"poke-pic\">\n          <img src={props.pic} className=\"pic\"  alt={props.name} />\n        </div>\n        <p className='poke-name'>{props.name}</p>\n        <p className='poke-type'>  {props.type}</p>\n        <button className=\"drop-button\" onClick={toggle} >STATS</button>\n      </div>     \n      <div className=\"dropdown\"  ref={dropdown}>\n        <div ref={dropInfo} className={show}   >\n          <ul>\n            <li key={Math.random() +  props.name} > EXP <span>{props.baseEx} </span></li>\n            {props.stats}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport  default Pokedex;\n","export default __webpack_public_path__ + \"static/media/arrow-pic.b8a1f3ca.png\";","import React, { useState , useEffect, useRef } from 'react';\nimport Pokedex  from './Pokedex';\nimport axios from 'axios';\nimport arrow from './arrow-pic.png';\nimport {Battle} from './Context.js';\n<link href=\"http://fonts.cdnfonts.com/css/pokemon-solid\" rel=\"stylesheet\"></link>\n\nfunction App() {\n  const [siteArr, setSiteArr] = useState([])\n  const [page, setPage] = useState(\"https://pokeapi.co/api/v2/pokemon/?limit=20\")\n  const [nameArr, setNameArr] = useState([])\n  const [pageNum,setPageNum] = useState(1)\n  \n  const prevBtn = useRef()\n  const nextBtn = useRef()\n  const lastBtn = useRef()\n  const firstBtn = useRef()\n  \n  const bottom = useRef()\n  const bottomPoke= useRef()\n  const logo= useRef()\n  const [value, setValue] = useState([])\n\n  function nextPage(){\n    axios.get(page).then(res =>{\n      setPage(res.data.next) \n     \n    }) \n    setPageNum(pageNum + 1)\n    window.scrollTo(0,0)\n  }\n  function previousPage(){\n    axios.get(page).then(res =>{\n      setPage(res.data.previous) \n    }) \n    setPageNum(pageNum - 1)\n    window.scrollTo(0,0)\n  }  \n  function lastPage(){\n    setPage('https://pokeapi.co/api/v2/pokemon/?offset=1118&limit=8')\n    setPageNum(57)\n    window.scrollTo(0,0) \n  }\n  function firstPage(){\n    setPage(\"https://pokeapi.co/api/v2/pokemon/?limit=20\")\n    setPageNum(1)\n  }\n  function scrollTop(){\n    window.scrollTo(0,0)\n  }\n  useEffect(()=> { \n    axios.get(page).then(response=> {\n          (response.data.previous === null)? prevBtn.current.style.visibility='hidden' \n          : prevBtn.current.style.visibility='visible' ;\n          (response.data.next === null)? nextBtn.current.style.visibility='hidden' \n          :nextBtn.current.style.visibility='visible' ;\n    }).then((pageNum === 1 ) ? firstBtn.current.style.visibility='hidden'\n            :firstBtn.current.style.visibility='visible'\n      ).then((pageNum === 57) ? lastBtn.current.style.visibility='hidden'\n      :lastBtn.current.style.visibility='visible')\n  }, [pageNum , page ])\n  useEffect(()=> { \n    axios.get(page) \n            .then(response => {\n              setNameArr(response.data.results.map(x =>  x.name) )\n              setSiteArr(response.data.results.map(x =>  x.url) )             \n             })\n      .catch((err) => {console.error(err) })   \n  }, [page ]) \n  useEffect(()=> { \n   (value.length < 1 ) ? bottom.current.style.background=\"transparent\"  \n  : bottom.current.style.background=\"linear-gradient(333deg, rgba(189,185,185,1) 0%, rgba(254,253,253,1) 100%, rgba(186,182,182,1) 100%)\"\n   }, [value ]) \n  //const selectName = value.map(x=> x[0] + \" \")\n  //const selectPic = value.map(x=> x[4])\n  //const selectColor = value.map(x=> x[5])  56\n  //const selectType = value.map(x=> x[1][0])\n  //const selectHp = value.map(x=> x[7][0]['base_stat'])\n  //const selectAttack = value.map(x=> x[7][1]['base_stat'])\n  //const selectSpeed = value.map(x=> x[7][5]['base_stat'])\n  //const selectDefense = value.map(x=> x[7][2]['base_stat'])\n  function selectDisplay(x){\n   return <div style={{background:x[5]}} ref={bottomPoke} className='bottomPoke'  >    \n       <br/><img src={x[4]}    className='bottom-pic'   alt={x[0]}/>\n    </div>  \n  }\n  return (\n    <div className=\"App\">\n      <div className='header'>\n      <div >  <button  className='pg-btn' id='first-btn' ref={firstBtn} onClick={firstPage} > first </button></div>\n        <div >  <button  className='pg-btn' id='prev-btn' ref={prevBtn} onClick={previousPage} > prev </button></div>\n        <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/2560px-International_Pok%C3%A9mon_logo.svg.png' alt='logo' id='logo'  ref={logo}  />\n        <div > <button className='pg-btn' id='next-btn' ref={nextBtn} onClick={nextPage} > next </button> </div>\n        <div > <button className='pg-btn' id='last-btn' ref={lastBtn} onClick={lastPage} > last </button> </div>  \n        <div id=\"page-num\">\n          <p>Page {pageNum} / 57 </p>\n        </div> \n        <button onClick={scrollTop} id='top-btn' > \n            <img id='arrow-pic' src={arrow}  alt='up-arrow'/>\n        </button>      \n      </div>\n      <Battle.Provider value={{value, setValue , pageNum}} >\n        <Pokedex names={nameArr} urls={siteArr}  /> \n      </Battle.Provider>\n     <div ref={bottom} id='bottom'> \n        {value.map(selectDisplay)}\n     </div>    \n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}